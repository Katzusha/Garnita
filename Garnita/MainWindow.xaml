<Window x:Class="Garnita.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Garnita"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="MainWindow" Height="871" Width="1286" Background="#3E2D2D"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Window.Resources>
        <Color x:Key="SecondaryColor">#3e3e3e</Color>
        <SolidColorBrush x:Key="SecondaryBrush" Color="#3e3e3e"/>
        <SolidColorBrush x:Key="PrimaryColor" Color="#5656FF"/>
        <SolidColorBrush x:Key="FontColor" Color="#FFFFFF"/>

        <Style x:Key="GeneratedLabel" TargetType="Label">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Foreground" Value="{DynamicResource FontColor}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="IsHitTestVisible" Value="False"/>
        </Style>

        <Style x:Key="Textbox" TargetType="TextBox">
            <Setter Property="Foreground" Value="{DynamicResource FontColor}"/>
            <Setter Property="Background" Value="#5a4261"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Width" Value="450"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="IBeam"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border Name="Border" CornerRadius="5" Padding="0">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource SecondaryColor}"/>
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="Transparent" />
                            </Border.BorderBrush>
                            <ScrollViewer Margin="20, 0, 20, 0" x:Name="PART_ContentHost" Height="50" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="450"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PasswordBox" TargetType="PasswordBox">
            <Setter Property="Foreground" Value="{DynamicResource FontColor}"/>
            <Setter Property="Background" Value="#5A4261"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Width" Value="450"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="IBeam"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border Name="Border" CornerRadius="5" Padding="0">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource SecondaryColor}" />
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="Transparent" />
                            </Border.BorderBrush>
                            <ScrollViewer Margin="20, 0, 20, 0" x:Name="PART_ContentHost" Height="50" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DatePicker" TargetType="DatePicker">
            <Setter Property="Foreground" Value="#000000"/>
            <Setter Property="Background" Value="#5A4261"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Width" Value="450"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="IBeam"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border Name="Border" CornerRadius="5" Padding="0">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource SecondaryColor}" />
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="Transparent" />
                            </Border.BorderBrush>
                            <ScrollViewer Margin="20, 0, 20, 0" x:Name="PART_ContentHost" Height="50" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Label" TargetType="Label">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Foreground" Value="{DynamicResource FontColor}"/>
        </Style>

        <Style x:Key="GeneratedButton" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource FontColor}"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
            <Setter Property="Height" Value="auto"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Grid.ColumnSpan" Value="10"/>
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0, 0, 0, 5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="5" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#766776" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ContextButton" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource FontColor}"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="5" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#767676" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TrueButton" TargetType="Button">
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="Background" Value="#4CA04C"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="5" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#4CA04C" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FalseButton" TargetType="Button">
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="Background" Value="#00FFFFFF"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="5" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF5656" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="DatePickerTemplate1" TargetType="{x:Type DatePicker}">
            <Border Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Padding="{TemplateBinding Padding}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <DoubleAnimation Duration="0" Storyboard.TargetName="PART_DisabledVisual" To="1" Storyboard.TargetProperty="Opacity"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid Width="450" Height="50" x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <Grid.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="5"/>
                        </Style>
                        <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
                        <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0"/>
                                            <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                            <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Duration="0" Storyboard.TargetName="Background" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"/>
                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                                    <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                                    <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                    <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                                    <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                                    <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                    <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="40" Margin="0" VerticalAlignment="Center" Width="40">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20*"/>
                                        <ColumnDefinition Width="20*"/>
                                        <ColumnDefinition Width="20*"/>
                                        <ColumnDefinition Width="20*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="23*"/>
                                        <RowDefinition Height="19*"/>
                                        <RowDefinition Height="19*"/>
                                        <RowDefinition Height="19*"/>
                                    </Grid.RowDefinitions>
                                    <Border x:Name="Highlight" BorderBrush="#FF45D6FA" BorderThickness="1" CornerRadius="0,0,1,1" Grid.ColumnSpan="4" Margin="-1" Opacity="0" Grid.RowSpan="4" Grid.Row="0"/>
                                    <Border x:Name="Background" Background="Transparent" BorderBrush="#FFFFFFFF" BorderThickness="1" CornerRadius=".5" Grid.ColumnSpan="4" Margin="0,-1,0,0" Opacity="1" Grid.RowSpan="3" Grid.Row="1"/>
                                    <Border x:Name="BackgroundGradient" BorderBrush="#BF000000" BorderThickness="1" CornerRadius=".5" Grid.ColumnSpan="4" Margin="0,-1,0,0" Opacity="1" Grid.RowSpan="3" Grid.Row="1">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                    <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                <GradientStop Color="#FF4084BD"/>
                                                <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                        <Rectangle.Stroke>
                                            <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                <GradientStop Color="#FF494949"/>
                                                <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Stroke>
                                    </Rectangle>
                                    <Path Grid.Column="0" Grid.ColumnSpan="4" Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z" Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3" RenderTransformOrigin="0.5,0.5" Grid.RowSpan="3" Grid.Row="1" Stretch="Fill" VerticalAlignment="Center"/>
                                    <Ellipse Grid.ColumnSpan="4" Fill="#FFFFFFFF" HorizontalAlignment="Center" Height="3" StrokeThickness="0" VerticalAlignment="Center" Width="3"/>
                                    <Border x:Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" CornerRadius="0,0,.5,.5" Grid.ColumnSpan="4" Opacity="0" Grid.RowSpan="4" Grid.Row="0"/>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Left" Margin="3,0,3,0" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Top" Width="50" Height="50"/>
                    <DatePickerTextBox x:Name="PART_TextBox" BorderBrush="#454545" Grid.Column="0" Focusable="{TemplateBinding Focusable}" Background="{DynamicResource SecondaryBrush}" Foreground="{DynamicResource FontColor}" HorizontalContentAlignment="Center" Grid.Row="0" VerticalContentAlignment="Center">
                        <DatePickerTextBox.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="5"/>
                            </Style>
                        </DatePickerTextBox.Resources>
                    </DatePickerTextBox>
                    <Grid x:Name="PART_DisabledVisual" Grid.Column="0" Grid.ColumnSpan="2" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.Column="0" Fill="Transparent" Grid.Row="0" RadiusX="1" RadiusY="1"/>
                        <Rectangle Grid.Column="1" Fill="#FFFFFF" Height="50" Margin="3,0,3,0" Grid.Row="0" RadiusX="1" RadiusY="1" Width="50"/>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                    </Grid>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                    <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="{DynamicResource SecondaryColor}"/>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="5"
                  Background="#FF3F3F3F"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="25, 0, 0, 25" 
                  Margin="1" 
                  Background="#FF3F3F3F" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,0,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="25,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="25,3,23,3"
                            Focusable="True" 
                            Background="#3e3e3e"
                            Foreground="White"
                            Visibility="Hidden"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="#3e3e3e"
                                CornerRadius="5"
                                BorderThickness="0"
                                BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                                CornerRadius="5"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ComboBoxItemContainerStyle1" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Margin" Value="10, 0, 0, 0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border" Padding="20, 0, 0, 0" SnapsToDevicePixels="true" CornerRadius="15">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" TargetName="Border" Value="#FF4F4F4F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#5656FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#5656FF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#5656FF"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
    </Window.Resources>
    
    <Grid>
        <Grid x:Name="LoginScreen" Height="400" Width="500" Visibility="Hidden">
            <TextBox x:Name="UsernameInput" Style="{DynamicResource Textbox}" Margin="0, -100, 0, 0"/>
            <Label Style="{DynamicResource Label}" x:Name="UsernameLabel" Content="Username :" Margin="0, -180, 0, 0"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <PasswordBox x:Name="PasswordInput" Margin="0, 0, 0, -100" Style="{DynamicResource PasswordBox}"/>
            <Label Style="{DynamicResource Label}" x:Name="PasswordLabel" Content="Password :" Margin="0, 0, 0, -20"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <Button x:Name="LogInButton" Content="Log in" Style="{DynamicResource TrueButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="25, 25, 25, 25" Click="LogInButton_Click"/>
            <Button x:Name="CanselLoginButton" Content="Exit" Style="{DynamicResource FalseButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="25, 25, 130, 25" Click="CanselLoginButton_Click"/>

            <Label  x:Name="RegisterButton" Cursor="Hand" Content="Register ?" Style="{DynamicResource Label}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="25, 25, 25, 50" MouseLeftButtonDown="RegisterButton_MouseLeftButtonDown"/>
            <Label  x:Name="ForgotPassword" Cursor="Hand" Content="Forgot password ?" Style="{DynamicResource Label}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="25, 25, 25, 0" MouseLeftButtonDown="ForgotPassword_MouseLeftButtonDown"/>
        </Grid>

        <Grid x:Name="ForgotenPasswordScreen" Visibility="Hidden">
            <TextBox x:Name="ForgotEmailInput" Style="{DynamicResource Textbox}" Margin="0, -400, 0, 0"/>
            <Label Style="{DynamicResource Label}" x:Name="ForgotEmailLabel" Content="Email :" Margin="0, -480, 0, 0"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <TextBox x:Name="ForgotUsernameInput" Style="{DynamicResource Textbox}" Margin="0, -200, 0, 0"/>
            <Label Style="{DynamicResource Label}" x:Name="ForgotUsernameLabel" Content="Username :" Margin="0, -280, 0, 0"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <TextBox x:Name="ForgotPasswordInput" Style="{DynamicResource Textbox}" Margin="0, 0, 0, 0"/>
            <Label Style="{DynamicResource Label}" x:Name="ForgotPasswordLabel" Content="New password :" Margin="0, -80, 0, 0"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <PasswordBox x:Name="ForgotPasswordInputTest" Style="{DynamicResource PasswordBox}" Margin="0, 0, 0, -200"/>
            <Label Style="{DynamicResource Label}" x:Name="ForgotPasswordTestLabel" Content="Re-enter new password :" Margin="0, 0, 0, -120"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <Button Content="Confirm" x:Name="ConfirmForgotPasswordButton" Style="{DynamicResource TrueButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="25, 25, 25, 25" Click="ConfirmForgotPasswordButton_Click"/>

            <Button Content="Cancel" x:Name="CancelForgotPasswordButton" Style="{DynamicResource FalseButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="25, 25, 130, 25" Click="CancelForgotPasswordButton_Click"/>
        </Grid>

        <Grid x:Name="RegisterScreen" Visibility="Hidden">
            <TextBox Style="{DynamicResource Textbox}" Margin="0, -600, 0, 0" x:Name="RegisterFirstnameInput"/>
            <Label Style="{DynamicResource Label}" x:Name="FirstnameLabel" Content="Firstname :" Margin="0, -680, 0, 0"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <TextBox Style="{DynamicResource Textbox}" Margin="0, -400, 0, 0" x:Name="RegisterSurnameInput"/>
            <Label Style="{DynamicResource Label}" x:Name="SurnameLabel" Content="Surname :" Margin="0, -480, 0, 0"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <DatePicker x:Name="RegisterBirthInput" Template="{DynamicResource DatePickerTemplate1}" Style="{DynamicResource DatePicker}" Margin="0, -200, 0, 0"/>
            <Label Style="{DynamicResource Label}" x:Name="BirthLabel" Content="Birth :" Margin="0, -280, 0, 0"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <TextBox Style="{DynamicResource Textbox}" Margin="0, 0, 0, 0" x:Name="RegisterEmailInput"/>
            <Label Style="{DynamicResource Label}" x:Name="EmailLabel" Content="eMail :" Margin="0, -80, 0, 0"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <TextBox Style="{DynamicResource Textbox}" Margin="0, 0, 0, -200" x:Name="RegisterUsernameInput"/>
            <Label Style="{DynamicResource Label}" x:Name="RegisterUsernameLabel" Content="Username :" Margin="0, 0, 0, -120"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <TextBox Style="{DynamicResource Textbox}" Margin="0, 0, 0, -400" x:Name="RegisterPasswordInput"/>
            <Label Style="{DynamicResource Label}" x:Name="RegisterPasswordLabel" Content="Password :" Margin="0, 0, 0, -320"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <Button Content="Create" x:Name="CreateUserButton" Style="{DynamicResource TrueButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="25, 25, 25, 25" Click="CreateUserButton_Click"/>

            <Button Content="Cancel" x:Name="CanselCreateUserButton" Style="{DynamicResource FalseButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="25, 25, 130, 25" Click="CanselCreateUserButton_Click"/>
        </Grid>

        <Grid x:Name="RentScreen" Visibility="Hidden">
            <Grid.RowDefinitions>
                <RowDefinition Height="90px"/>
                <RowDefinition/>
                <RowDefinition Height="90px"/>
            </Grid.RowDefinitions>

            <Button Grid.Row="0" x:Name="AddRentButton" Content="Add" Style="{DynamicResource ContextButton}" HorizontalAlignment="Left" Margin="25, 0, 0, 0" Click="AddRentButton_Click"/>

            <Button Grid.Row="0" x:Name="ChangeColorbutton" Content="Color" Style="{DynamicResource ContextButton}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="25, 25, 25, 25" Click="ChangeColorbutton_Click"/>

            <Border Background="Transparent" Height="50" Grid.Row="1" Margin="25, 0, 25, 0" VerticalAlignment="Top">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Label Style="{DynamicResource Label}" Content="Name" HorizontalAlignment="Center"/>

                    <Label Style="{DynamicResource Label}" Content="From date" HorizontalAlignment="Center" Grid.Column="1"/>
                    
                    <Label Style="{DynamicResource Label}" Content="To date" HorizontalAlignment="Center" Grid.Column="2"/>

                    <Label Style="{DynamicResource Label}" Content="Car model" HorizontalAlignment="Center" Grid.Column="3"/>
                </Grid>
            </Border>
            
            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" Margin="25, 50, 25, 0">
                <Grid>
                    <Grid x:Name="RentsGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                    </Grid>

                </Grid>
            </ScrollViewer>

            <Button Grid.Row="2" x:Name="GarageButton" Content="Garages" Style="{DynamicResource ContextButton}" HorizontalAlignment="Left" Margin="25, 0, 0, 0" Click="GarageButton_Click"/>

            <Button Grid.Row="2" x:Name="CarsButton" Content="Cars" Style="{DynamicResource ContextButton}" HorizontalAlignment="Left" Margin="130, 0, 0, 0" Click="CarsButton_Click"/>
        </Grid>

        <Grid x:Name="CreateRentScreen" Visibility="Hidden">
            <ComboBox x:Name="RentUserInput" Height="50" Width="450" Cursor="Hand" Foreground="{DynamicResource FontColor}" Margin="-500, -200, 0, 0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="24"/>
            <Label Style="{DynamicResource Label}" x:Name="RentUserLabel" Content="User :" Margin="-500, -280, 0, 0"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <ComboBox x:Name="RentCarInput" Height="50" Cursor="Hand" Width="450" Foreground="{DynamicResource FontColor}" Margin="0, -200, -500, 0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="24"/>
            <Label Style="{DynamicResource Label}" x:Name="RentCarLabel" Content="Car :" Margin="0, -280, -500, 0"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <DatePicker x:Name="RentFromDateInput" Foreground="{DynamicResource FontColor}" Template="{DynamicResource DatePickerTemplate1}" Style="{DynamicResource DatePicker}" Margin="-500, 0, 0, 0"/>
            <Label Style="{DynamicResource Label}" x:Name="RentFromDateLabel" Content="Form date :" Margin="-500, -80, 0, 0"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <DatePicker x:Name="RentToDateInput" Foreground="{DynamicResource FontColor}" Template="{DynamicResource DatePickerTemplate1}" Style="{DynamicResource DatePicker}" Margin="0, 0, -500, 0"/>
            <Label Style="{DynamicResource Label}" x:Name="RentToDateLabel" Content="To date :" Margin="0, -80, -500, 0"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <Button Content="Create" x:Name="CreateRentButton" Style="{DynamicResource TrueButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="25, 25, 25, 25" Click="CreateRentButton_Click"/>

            <Button Content="Cancel" x:Name="CancelRentButton" Style="{DynamicResource FalseButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="25, 25, 130, 25" Click="CancelRentButton_Click"/>
        </Grid>

        <Grid x:Name="GarageScreen" Visibility="Hidden">
            <Label Style="{DynamicResource Label}" x:Name="GarageLabel" Content="Garages" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="25, 25, 25, 25"/>

            <Button x:Name="AddGarageButton" Style="{DynamicResource ContextButton}" Content="Add" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="130, 25, 25, 25" Click="AddGarageButton_Click"/>

            <Button x:Name="GarageBackButton" Style="{DynamicResource ContextButton}" Content="Back" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="25, 25, 25, 25" Click="GarageBackButton_Click"/>

            <Border Background="Transparent" Margin="25, 90, 25, 0" Height="50" VerticalAlignment="Top">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Label Style="{DynamicResource Label}" Content="Name" HorizontalAlignment="Center"/>
                    
                    <Label Style="{DynamicResource Label}" Content="City" HorizontalAlignment="Center" Grid.Column="1"/>
                </Grid>
            </Border>

            <ScrollViewer Margin="25, 150, 25, 25" VerticalScrollBarVisibility="Auto">
                <Grid x:Name="GaragesGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                </Grid>
            </ScrollViewer>
        </Grid>

        <Grid x:Name="CreateGarageScreen" Visibility="Hidden">
            <TextBox x:Name="GarageNameINput" Style="{DynamicResource Textbox}" Margin="0, -200, 0, 0"/>
            <Label Style="{DynamicResource Label}" x:Name="GarageNameLabel" Content="Name :" Margin="0, -280, 0, 0"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <ComboBox x:Name="GarageCityInput" Height="50" Width="450" Margin="0, 0, 0, 0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="24"/>
            <Label Style="{DynamicResource Label}" x:Name="GarageCityLabel" Content="City :" Margin="0, -80, 0, 0"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <Button Content="Create" x:Name="CreateGarageButton" Style="{DynamicResource TrueButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="25, 25, 25, 25" Click="CreateGarageButton_Click"/>

            <Button Content="Cancel" x:Name="CancelGarageButton" Style="{DynamicResource FalseButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="25, 25, 130, 25" Click="CancelGarageButton_Click"/>
        </Grid>

        <Grid x:Name="CarScreen" Visibility="Visible">
            <Label  x:Name="CarLabel" Content="Cars" Style="{DynamicResource Label}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="25, 25, 25, 25"/>

            <Button x:Name="AddCarButton" Style="{DynamicResource ContextButton}" Content="Add" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="130, 25, 25, 25" Click="AddCarButton_Click"/>

            <Button x:Name="CarBackButton" Style="{DynamicResource ContextButton}" Content="Back" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="25, 25, 25, 25" Click="CarBackButton_Click"/>

            <Border Background="Transparent" Margin="25, 90, 25, 0" Height="50" VerticalAlignment="Top">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Label Style="{DynamicResource Label}" Content="Car model" HorizontalAlignment="Center"/>

                    <Label Style="{DynamicResource Label}" Content="Licence plate" HorizontalAlignment="Center" Grid.Column="1"/>
                    
                    <Label Style="{DynamicResource Label}" Content="Garage" HorizontalAlignment="Center" Grid.Column="2"/>
                </Grid>
            </Border>

            <ScrollViewer Margin="25, 150, 25, 25" VerticalScrollBarVisibility="Auto">
                <Grid x:Name="CarsGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                </Grid>
            </ScrollViewer>
        </Grid>

        <Grid x:Name="CreateCarScreen" Visibility="Hidden">
            <TextBox x:Name="CarNameInput" Style="{DynamicResource Textbox}" Margin="0, -200, 0, 0"/>
            <Label Style="{DynamicResource Label}" x:Name="CarNameLabel" Content="Name :" Margin="0, -280, 0, 0"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <TextBox x:Name="CarLicenceplateInput" Style="{DynamicResource Textbox}" Margin="0, -00, 0, 0"/>
            <Label Style="{DynamicResource Label}" x:Name="CarLicenceplateLabel" Content="Licence plate :" Margin="0, -80, 0, 0"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <ComboBox x:Name="CarGarageInput" Height="50" Width="450" Margin="0, 0, 0, -200" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="24"/>
            <Label Style="{DynamicResource Label}" x:Name="CarGarageLabel" Content="Garage :" Margin="0, 0, 0, -120"   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <Button Content="Create" x:Name="CreateCarButton" Style="{DynamicResource TrueButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="25, 25, 25, 25" Click="CreateCarButton_Click"/>

            <Button Content="Cancel" x:Name="CancelCarButton" Style="{DynamicResource FalseButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="25, 25, 130, 25" Click="CancelCarButton_Click"/>
        </Grid>

        <Grid x:Name="ColorScreen" Visibility="Hidden">
            <xctk:ColorPicker x:Name="ColorPrimaryInput" Height="50" Width="450" Margin="0, -400, 0, 0" Background="Transparent"/>
            <Label Style="{DynamicResource Label}" x:Name="ColorPrimaryLabel" Content="Primary color :" Margin="0, -480, 0, 0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <xctk:ColorPicker x:Name="ColorSecondaryInput" Height="50" Width="450" Margin="0, -200, 0, 0" Background="Transparent"/>
            <Label Style="{DynamicResource Label}" x:Name="ColorSecondaryLabel" Content="Secondary color :" Margin="0, -280, 0, 0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <xctk:ColorPicker x:Name="ColorBackgroundInput" Height="50" Width="450" Margin="0, 0, 0, 0" Background="Transparent"/>
            <Label Style="{DynamicResource Label}" x:Name="ColorbackgroundLabel" Content="Background color :" Margin="0, -80, 0, 0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>

            <xctk:ColorPicker x:Name="ColorFontInput" Height="50" Width="450" Margin="0, 0, 0, -200" Background="Transparent" DropDownBackground="{DynamicResource SecondaryBrush}" Foreground="{DynamicResource FontColor}" HeaderForeground="{DynamicResource FontColor}"/>
            <Label Style="{DynamicResource Label}" x:Name="colorFontLabel" Content="Text color :" Margin="0, 0, 0, -120" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>
            
            <Button Content="Save" x:Name="SaveColorButton" Style="{DynamicResource TrueButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="25, 25, 25, 25" Click="SaveColorButton_Click"/>

            <Button Content="Cancel" x:Name="CancelColorButton" Style="{DynamicResource FalseButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="25, 25, 130, 25" Click="CancelColorButton_Click"/>
        </Grid>

        <Border x:Name="ErrorWindow" Height="250" Width="400" CornerRadius="5" Background="#3e3e3e" Visibility="Hidden">
            <Grid>
                <TextBox x:Name="ErrorMessage" Text="ErrorMessage" BorderThickness="0" FontSize="24" Foreground="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" TextWrapping="Wrap" IsReadOnly="True" Cursor="Arrow" Margin="5, 5, 5, 75" Background="Transparent"/>

                <Button Content="OK" x:Name="ErrorOkButton" Style="{DynamicResource TrueButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="5, 5, 5, 5" Click="ErrorOkButton_Click"/>
            </Grid>
        </Border>
    </Grid>
</Window>